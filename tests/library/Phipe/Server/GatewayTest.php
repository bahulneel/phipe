<?php

namespace Phipe\Server;

/**
 * Test class for Gateway.
 * Generated by PHPUnit on 2012-04-29 at 19:04:01.
 */
class GatewayTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Gateway
     */
    protected $server;

    /**
     *
     * @var \PHPUnit_Framework_MockObject_MockObject
     */
    protected $gateway;

    /**
     * 
     * @var \PHPUnit_Framework_MockObject_MockObject
     */
    protected $service;

    protected function setUp()
    {
        $service = $this->getMock( '\Phipe\Service\Service' );
        $gateway = $this->getMock( '\Phipe\Gateway\Gateway' );

        $this->server = new Gateway( $gateway, $service );
        $this->service = $service;
        $this->gateway = $gateway;
    }

    /**
     * @covers Phipe\Server\Gateway::run
     */
    public function testRun()
    {
        $this->markTestSkipped( 'This has to be skipped until the new version of phpunit or we can avoid the clone issues with a callback (fixed in https://github.com/sebastianbergmann/phpunit-mock-objects/pull/70)' );
        $request = $this->getMock( '\Phipe\Message\Message' );
        $response = $this->getMock( '\Phipe\Message\Message' );

        $this->gateway
                ->expects( $this->exactly( 2 ) )
                ->method( 'recv' )
                ->will(
                        $this->onConsecutiveCalls(
                                $this->returnValue( $request ), null
                        )
                )
        ;

        $this->service
                ->expects( $this->once() )
                ->method( 'process' )
                ->with( $this->identicalTo( $request ) )
                ->will( $this->returnValue( $response ) )
        ;

        $this->gateway
                ->expects( $this->once() )
                ->method( 'send' )
                ->with( $this->identicalTo( $response ) )
        ;

        $this->server->run();
    }

}

